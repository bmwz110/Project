{"ast":null,"code":"import _toConsumableArray from \"/Users/liuchao/Documents/GitHub/Project/react/todolist/pro2_multiComponents/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/liuchao/Documents/GitHub/Project/react/todolist/pro2_multiComponents/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuchao/Documents/GitHub/Project/react/todolist/pro2_multiComponents/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/liuchao/Documents/GitHub/Project/react/todolist/pro2_multiComponents/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liuchao/Documents/GitHub/Project/react/todolist/pro2_multiComponents/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/liuchao/Documents/GitHub/Project/react/todolist/pro2_multiComponents/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/liuchao/Documents/GitHub/Project/react/todolist/pro2_multiComponents/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liuchao/Documents/GitHub/Project/react/todolist/pro2_multiComponents/src/TodoList.js\";\nimport React from 'react';\nimport TodoItem from \"./TodoItem\";\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoList, _React$Component);\n\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props));\n    _this.state = {\n      list: [],\n      inputValue: \"\" //在constructor中将bind(this)赋值，以避免在render中使用，可以有效提升代码效率\n\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.handleBtnClick = _this.handleBtnClick.bind(_assertThisInitialized(_this));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"handleBtnClick\",\n    value: function handleBtnClick() {\n      this.setState({\n        list: [].concat(_toConsumableArray(this.state.list), [this.state.inputValue]),\n        inputValue: \"\"\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState({\n        inputValue: e.target.value\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(index) {\n      var list = _toConsumableArray(this.state.list);\n\n      list.splice(index, 1);\n      this.setState({\n        list: list //等价于一个list\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.inputValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleBtnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      },\n      /*父组件通过属性的形式向子组件传递参数 */\n      this.state.list.map(function (item, index) {\n        return React.createElement(TodoItem, {\n          delete: _this2.handleDelete,\n          key: index,\n          content: item,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return TodoList;\n}(React.Component);\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/liuchao/Documents/GitHub/Project/react/todolist/pro2_multiComponents/src/TodoList.js"],"names":["React","TodoItem","TodoList","props","state","list","inputValue","handleInputChange","bind","handleBtnClick","handleDelete","setState","e","target","value","index","splice","map","item","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,Q;;;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,UAAU,EAAE,EAFD,CAIb;;AAJa,KAAb;AAKA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,+BAAtB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;AATiB;AAUlB;;;;qCAEgB;AACf,WAAKG,QAAL,CAAc;AACZN,QAAAA,IAAI,+BAAM,KAAKD,KAAL,CAAWC,IAAjB,IAAuB,KAAKD,KAAL,CAAWE,UAAlC,EADQ;AAEZA,QAAAA,UAAU,EAAE;AAFA,OAAd;AAID;;;sCAEiBM,C,EAAG;AACnB,WAAKD,QAAL,CAAc;AACZL,QAAAA,UAAU,EAAEM,CAAC,CAACC,MAAF,CAASC;AADT,OAAd;AAGD;;;iCAEYC,K,EAAO;AAClB,UAAMV,IAAI,sBAAO,KAAKD,KAAL,CAAWC,IAAlB,CAAV;;AACAA,MAAAA,IAAI,CAACW,MAAL,CAAYD,KAAZ,EAAmB,CAAnB;AACA,WAAKJ,QAAL,CAAc;AACZN,QAAAA,IAAI,EAAEA,IADM,CACC;;AADD,OAAd;AAGD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,UAAzB;AAAqC,QAAA,QAAQ,EAAE,KAAKC,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACA,WAAKL,KAAL,CAAWC,IAAX,CAAgBY,GAAhB,CAAoB,UAACC,IAAD,EAAMH,KAAN,EAAgB;AAClC,eAAO,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAE,MAAI,CAACL,YAAvB;AAAqC,UAAA,GAAG,EAAEK,KAA1C;AAAiD,UAAA,OAAO,EAAEG,IAA1D;AAAgE,UAAA,KAAK,EAAEH,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,CAHJ,CALF,CADF;AAgBD;;;;EApDoBf,KAAK,CAACmB,S;;AAuD7B,eAAejB,QAAf","sourcesContent":["import React from 'react';\nimport TodoItem from \"./TodoItem\"\n\nclass TodoList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      inputValue: \"\"\n    }\n    //在constructor中将bind(this)赋值，以避免在render中使用，可以有效提升代码效率\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleBtnClick = this.handleBtnClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleBtnClick() {\n    this.setState({\n      list: [...this.state.list, this.state.inputValue],\n      inputValue: \"\"\n    })\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n\n  handleDelete(index) {\n    const list = [...this.state.list];\n    list.splice(index, 1);\n    this.setState({\n      list: list   //等价于一个list\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <input value={this.state.inputValue} onChange={this.handleInputChange}/>\n          <button onClick={this.handleBtnClick}>Add</button>\n        </div>\n        <ul>\n          {\n            /*父组件通过属性的形式向子组件传递参数 */\n            this.state.list.map((item,index) => {\n              return <TodoItem delete={this.handleDelete} key={index} content={item} index={index}/>\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}